import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as c,c as p,d as e,e as n,b as o,w as s,f as h}from"./app-Dya65-u5.js";const d={},m={href:"https://github.com/bilibili/http-service",target:"_blank",rel:"noopener noreferrer"},_=h('<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>对于一个前端工程师而言，每天都在面对的较多的需求场景就是调用后端的接口，所以需要推出一个具有统一错误处理、减少代码冗余、抹平风格差异、降低文档负担、优化代码提示等功能的统一请求库。</p><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p><strong>为什么需要一个统一的请求库</strong>， 面临各种各样的业务需求和技术场景，这导致我们不得不对大量的接口调用做差异化的设计和封装，再混合开发人员的风格的差异和历史问题，会导致各种各样问题的产生。</p><p>以下是比较典型的几个问题：</p><ol><li>代码冗余或维护成本过大：针对不同项目、产品定制的逻辑，基于 vue2、vue3 的封装，以及不同的异常代码处理</li><li>存在性能问题：功能堆砌导致代码过多、可能存在体积过大等问题而影响页面性能</li><li>前后端无法协同进化：后端由于有 <code>Spring</code> 全家桶加持，各模板之间的标准高度统一，但是前端都是零散的模块，阻碍了协同进化。</li></ol><h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标"><span>目标</span></a></h2>',7),g=e("p",null,"我们希望统一请求库能够解决的问题：",-1),u=e("ol",null,[e("li",null,"标准化和统一：统一不同前端仓库中的接口调用方式，从而降低因使用不同请求库而引发的行为差异和问题"),e("li",null,"实现一键全局能力注册"),e("li",null,"集成基础设施：统一请求库与全团队的基础技术生态进行集成，形成生态")],-1);function f(y,B){const r=t("ExternalLinkIcon"),a=t("Badge"),i=t("center");return c(),p("div",null,[e("p",null,[e("a",m,[n("http-service"),o(r)]),n(),o(a,{text:"正调研是否可用",type:"danger"})]),_,o(i,{style:{"font-weight":"bold","font-size":"20px"}},{default:s(()=>[n("⭐️ 一个 标准、灵活、强大 的 服务调用工具集 ⭐️")]),_:1}),g,u])}const x=l(d,[["render",f],["__file","统一请求库.html.vue"]]),E=JSON.parse('{"path":"/ydfel/%E7%BB%9F%E4%B8%80%E8%AF%B7%E6%B1%82%E5%BA%93.html","title":"统一请求库","lang":"zh-CN","frontmatter":{"title":"统一请求库","description":"http-service 前言 对于一个前端工程师而言，每天都在面对的较多的需求场景就是调用后端的接口，所以需要推出一个具有统一错误处理、减少代码冗余、抹平风格差异、降低文档负担、优化代码提示等功能的统一请求库。 背景 为什么需要一个统一的请求库， 面临各种各样的业务需求和技术场景，这导致我们不得不对大量的接口调用做差异化的设计和封装，再混合开发人员的...","head":[["meta",{"property":"og:url","content":"http://localhost:8080/ydfel/%E7%BB%9F%E4%B8%80%E8%AF%B7%E6%B1%82%E5%BA%93.html"}],["meta",{"property":"og:site_name","content":"Azil"}],["meta",{"property":"og:title","content":"统一请求库"}],["meta",{"property":"og:description","content":"http-service 前言 对于一个前端工程师而言，每天都在面对的较多的需求场景就是调用后端的接口，所以需要推出一个具有统一错误处理、减少代码冗余、抹平风格差异、降低文档负担、优化代码提示等功能的统一请求库。 背景 为什么需要一个统一的请求库， 面临各种各样的业务需求和技术场景，这导致我们不得不对大量的接口调用做差异化的设计和封装，再混合开发人员的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-07T09:38:47.000Z"}],["meta",{"property":"article:author","content":"Azil"}],["meta",{"property":"article:modified_time","content":"2024-05-07T09:38:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"统一请求库\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-07T09:38:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Azil\\",\\"url\\":\\"https://gitee.com/codedi\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"目标","slug":"目标","link":"#目标","children":[]}],"git":{"createdTime":1715074727000,"updatedTime":1715074727000,"contributors":[{"name":"Azil","email":"13701378834@163.com","commits":1}]},"readingTime":{"minutes":1.56,"words":467},"filePathRelative":"ydfel/统一请求库.md","localizedDate":"2024年5月7日","autoDesc":true,"excerpt":"<p><a href=\\"https://github.com/bilibili/http-service\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http-service</a> </p>\\n<h2>前言</h2>\\n<p>对于一个前端工程师而言，每天都在面对的较多的需求场景就是调用后端的接口，所以需要推出一个具有统一错误处理、减少代码冗余、抹平风格差异、降低文档负担、优化代码提示等功能的统一请求库。</p>\\n<h2>背景</h2>\\n<p><strong>为什么需要一个统一的请求库</strong>，\\n面临各种各样的业务需求和技术场景，这导致我们不得不对大量的接口调用做差异化的设计和封装，再混合开发人员的风格的差异和历史问题，会导致各种各样问题的产生。</p>"}');export{x as comp,E as data};
